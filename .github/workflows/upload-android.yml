name: Android upload

on:
  push:
    branches:    
      - 'prod'
    paths:
      - "src/android/**"
      - ".github/workflows/upload-android.yml"

env:
  WORKING_DIRECTORY: src
  SERVICE_ACCOUNT_JSON: ${{ secrets.SERVICE_ACCOUNT_JSON }}
  ANDROID_KEYSTORE_PASSWORD: ${{ secrets.KEYSTORE_PASSWORD }}
  ANDROID_STORE_PASSWORD: ${{ secrets.STORE_PASSWORD }}
  ANDROID_KEYSTORE_ALIAS: ${{ secrets.KEYSTORE_ALIAS }}
  RELEASE_KEY_STORE_BASE64: ${{ secrets.ANDROID_KEYSTORE }}

jobs:
  deploy:
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout source code
        uses: actions/checkout@v3

      - name: Create service-account.json
        run: echo -n "$SERVICE_ACCOUNT_JSON" > service-account.json

      - name: Read version number and version code
        run: |
          echo "VERSION_NAME=$(cat src/android/build.gradle | grep versionName | xargs | cut -f2 -d ' ')" >> $GITHUB_ENV
          echo "VERSION_CODE=$(cat src/android/build.gradle | grep versionCode | xargs | cut -f2 -d ' ')" >> $GITHUB_ENV

      - name: F-Droid check if changelog exists
        run: test -f "metadata/en-US/changelogs/$VERSION_CODE.txt"

      - name: Create changelog text for Github releases
        id: changelog
        run: |
          r=$(cat metadata/en-US/changelogs/$VERSION_CODE.txt)
          r="${r//'%'/'%25'}"               # Multiline escape sequences for %
          r="${r//$'\n'/'%0A'}"             # Multiline escape sequences for '\n'
          r="${r//$'\r'/'%0D'}"             # Multiline escape sequences for '\r'
          echo "RELEASE_BODY=$r" >> $GITHUB_OUTPUT

      - name: Create changelog text for Google Play Store
        run: |
          mkdir -p distribution/whatsnew
          cp metadata/en-US/changelogs/$VERSION_CODE.txt  distribution/whatsnew/whatsnew-en-US

      - name: Insert keystore properties
        working-directory: ${{ env.WORKING_DIRECTORY }}
        run: |
          sed -i -e "s%STORE_PASSWORD%${{env.ANDROID_STORE_PASSWORD}}%g" android/build.gradle
          sed -i -e "s%KEY_PASSWORD%${{env.ANDROID_KEYSTORE_PASSWORD}}%g" android/build.gradle
          sed -i -e "s%KEYSTORE_ALIAS%${{env.ANDROID_KEYSTORE_ALIAS}}%g" android/build.gradle

      - name: Create release keystore
        working-directory: ${{ env.WORKING_DIRECTORY }}
        run: echo -n "$RELEASE_KEY_STORE_BASE64" | base64 --decode > android/keystore.keystore

      # - name: Export signed apk and release to internal testing
      #   uses: dulvui/libgdx-android-upload@v1.2
      #   with:
      #     package-name: com.salvai.snake
      #     working-directory: ${{ env.WORKING_DIRECTORY }}

      - name: Set up JDK 1.8
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: 11

      - name: Setup Android SDK
        uses: android-actions/setup-android@v2

      - name: Build the libGDX application
        working-directory: src
        run: ./gradlew android:bundleRelease

      # GOOGLE PLAY STORE
      # - name: Publish to Play Store
      #   uses: r0adkll/upload-google-play@v1.0.18
      #   with:
      #     serviceAccountJson: service-account.json
      #     packageName: com.salvai.snake
      #     releaseFiles:  src/android/build/outputs/bundle/release/*.aab
      #     whatsNewDirectory: distribution/whatsnew
      #     track: 'internal'
      #     changesNotSentForReview: false
      #     status: completed

      - name: find aab
        run: ls -la src/android/build/outputs/bundle/release/

      # GITHUB RELEASES
      - name: Bundle aab to apk
        run: |
          wget -q https://github.com/google/bundletool/releases/download/1.14.0/bundletool-all-1.14.0.jar
          java -jar bundletool-all-1.14.0.jar build-apks --bundle=src/android/build/outputs/bundle/release/*.aab --output=Sn4ke.apks \
          --ks=keystore.keystore --ks-pass=pass:${{ secrets.ANDROID_STORE_PASSWORD }} --ks-key-alias=${{ secrets.ANDROID_KEYSTORE_ALIAS }} \
          --key-pass=pass:${{ secrets.ANDROID_KEYSTORE_PASSWORD }} --mode=universal
          unzip -p Sn4ke.apks universal.apk > Sn4ke.apk

      - name: Upload binaries to Github release
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: ./Sn4ke.apk
          asset_name: Sn4ke.apk
          tag: v${{ env.VERSION_NAME }}
          overwrite: true
          body:  ${{ steps.changelog.outputs.RELEASE_BODY }}